# Generated by Django 4.2.7 on 2025-07-31 14:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ImputationJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('input_format', models.CharField(default='vcf', max_length=20)),
                ('build', models.CharField(default='hg38', max_length=20)),
                ('phasing', models.BooleanField(default=True)),
                ('population', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('queued', 'Queued'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('progress_percentage', models.IntegerField(default=0)),
                ('external_job_id', models.CharField(blank=True, max_length=200)),
                ('input_file', models.FileField(blank=True, null=True, upload_to='uploads/input/')),
                ('input_file_size', models.BigIntegerField(blank=True, null=True)),
                ('result_files', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('execution_time_seconds', models.IntegerField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('service_response', models.JSONField(default=dict)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ImputationService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('service_type', models.CharField(choices=[('h3africa', 'H3Africa Imputation Service'), ('michigan', 'Michigan Imputation Service')], max_length=20)),
                ('api_url', models.URLField()),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('api_key_required', models.BooleanField(default=True)),
                ('max_file_size_mb', models.IntegerField(default=100)),
                ('supported_formats', models.JSONField(default=list)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_key', models.CharField(blank=True, max_length=500)),
                ('api_secret', models.CharField(blank=True, max_length=500)),
                ('additional_headers', models.JSONField(default=dict)),
                ('rate_limit_per_hour', models.IntegerField(default=100)),
                ('timeout_seconds', models.IntegerField(default=300)),
                ('retry_attempts', models.IntegerField(default=3)),
                ('settings', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('service', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='configuration', to='imputation.imputationservice')),
            ],
        ),
        migrations.CreateModel(
            name='ResultFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_type', models.CharField(choices=[('imputed_data', 'Imputed Data'), ('quality_report', 'Quality Report'), ('log_file', 'Log File'), ('summary', 'Summary'), ('metadata', 'Metadata')], max_length=20)),
                ('filename', models.CharField(max_length=255)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('download_url', models.URLField(blank=True)),
                ('file_size', models.BigIntegerField(blank=True, null=True)),
                ('checksum', models.CharField(blank=True, max_length=64)),
                ('is_available', models.BooleanField(default=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='imputation.imputationjob')),
            ],
            options={
                'ordering': ['file_type', 'filename'],
            },
        ),
        migrations.CreateModel(
            name='ReferencePanel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('panel_id', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('population', models.CharField(blank=True, max_length=100)),
                ('build', models.CharField(blank=True, max_length=20)),
                ('samples_count', models.IntegerField(blank=True, null=True)),
                ('variants_count', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reference_panels', to='imputation.imputationservice')),
            ],
            options={
                'ordering': ['service', 'name'],
                'unique_together': {('service', 'panel_id')},
            },
        ),
        migrations.CreateModel(
            name='JobStatusUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=20)),
                ('progress_percentage', models.IntegerField(default=0)),
                ('message', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('external_data', models.JSONField(default=dict)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_updates', to='imputation.imputationjob')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddField(
            model_name='imputationjob',
            name='reference_panel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imputation.referencepanel'),
        ),
        migrations.AddField(
            model_name='imputationjob',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imputation.imputationservice'),
        ),
        migrations.AddField(
            model_name='imputationjob',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imputation_jobs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='UserServiceAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_access', models.BooleanField(default=True)),
                ('api_key', models.CharField(blank=True, max_length=500)),
                ('quota_limit', models.IntegerField(blank=True, null=True)),
                ('quota_used', models.IntegerField(default=0)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imputation.imputationservice')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_access', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'service')},
            },
        ),
    ]
