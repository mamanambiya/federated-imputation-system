# Generated by Django 4.2.7 on 2025-08-04 16:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
        ('imputation', '0006_add_continent_field'),
    ]

    operations = [
        migrations.CreateModel(
            name='ServicePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.CharField(choices=[('view', 'View Service'), ('submit_jobs', 'Submit Jobs'), ('view_jobs', 'View Jobs'), ('manage_jobs', 'Manage Jobs'), ('admin', 'Admin Service')], max_length=20)),
                ('granted_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('granted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='granted_permissions', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permissions', to='imputation.imputationservice')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_permissions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['service', 'user', 'permission'],
                'unique_together': {('service', 'user', 'permission')},
            },
        ),
        migrations.CreateModel(
            name='ServiceUserGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_groups', to=settings.AUTH_USER_MODEL)),
                ('permissions', models.ManyToManyField(blank=True, to='imputation.servicepermission')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_groups', to='imputation.imputationservice')),
            ],
            options={
                'ordering': ['service', 'name'],
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('admin', 'Administrator'), ('service_admin', 'Service Administrator'), ('researcher', 'Researcher'), ('service_user', 'Service User'), ('viewer', 'Viewer')], max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('permissions', models.ManyToManyField(blank=True, to='auth.permission')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization', models.CharField(blank=True, max_length=200)),
                ('department', models.CharField(blank=True, max_length=200)),
                ('position', models.CharField(blank=True, max_length=100)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('research_area', models.CharField(blank=True, max_length=200)),
                ('institution', models.CharField(blank=True, max_length=200)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('preferred_language', models.CharField(default='en', max_length=10)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('email_notifications', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
                ('monthly_job_limit', models.IntegerField(default=10)),
                ('monthly_jobs_used', models.IntegerField(default=0)),
                ('storage_limit_gb', models.DecimalField(decimal_places=2, default=1.0, max_digits=10)),
                ('storage_used_gb', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='imputation.userrole')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user__username'],
            },
        ),
        migrations.CreateModel(
            name='ServiceUserGroupMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='added_memberships', to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imputation.serviceusergroup')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('group', 'user')},
            },
        ),
        migrations.AddField(
            model_name='serviceusergroup',
            name='users',
            field=models.ManyToManyField(related_name='service_groups', through='imputation.ServiceUserGroupMembership', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='serviceusergroup',
            unique_together={('name', 'service')},
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('login', 'User Login'), ('logout', 'User Logout'), ('create_job', 'Create Job'), ('update_job', 'Update Job'), ('delete_job', 'Delete Job'), ('create_user', 'Create User'), ('update_user', 'Update User'), ('delete_user', 'Delete User'), ('grant_permission', 'Grant Permission'), ('revoke_permission', 'Revoke Permission'), ('service_access', 'Service Access'), ('data_access', 'Data Access'), ('system_config', 'System Configuration')], max_length=20)),
                ('resource_type', models.CharField(blank=True, max_length=50)),
                ('resource_id', models.CharField(blank=True, max_length=100)),
                ('details', models.JSONField(default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', 'action', 'timestamp'], name='imputation__user_id_ee1103_idx'), models.Index(fields=['action', 'timestamp'], name='imputation__action_a8883e_idx'), models.Index(fields=['resource_type', 'resource_id'], name='imputation__resourc_efd7a1_idx')],
            },
        ),
    ]
